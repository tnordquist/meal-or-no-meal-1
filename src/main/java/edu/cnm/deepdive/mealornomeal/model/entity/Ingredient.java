package edu.cnm.deepdive.mealornomeal.model.entity;


import edu.cnm.deepdive.mealornomeal.view.FlatIngredient;
import java.net.URI;
import javax.annotation.PostConstruct;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.hateoas.server.EntityLinks;
import org.springframework.lang.NonNull;
import org.springframework.stereotype.Component;

/**
 * The Ingredient Entity class lists methods for the attributes of the Ingredient. These include:
 * Id, Name, and Quantity. The Ingredient populates the Meal Entity as to the food items included as
 * part of the meal. They also serve as the building blocks for ingredients for ListItems for the
 * shopping list feature.
 */
@SuppressWarnings("JpaDataSourceORMInspection")
@Component
@Entity
public class Ingredient implements FlatIngredient {

  private static EntityLinks entityLinks;
  /**
   * The column Id in the database that contains the Primary Key for a specific Ingredient in type
   * Long. This Id is autogenerated, cannot be null, and cannot be updated.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Column(name = "ingredient_id", nullable = false, updatable = false)
  private Long id;

  /**
   * The column Name in the database that contains the name for a specific Ingredient in String
   * format. The max String length is 100 characters and it cannot be null.
   */
  @Column(name = "name", length = 100, nullable = false)
  private String name;

  /**
   * The column Name in the database that contains the Quantity for a specific Ingredient in String
   * format. The max String length is 50 characters and it cannot be null.
   */
  @Column(name = "quantity", length = 50, nullable = false)
  private String quantity;

  /**
   * The column MealId in the database that contains the Id of a specific Meal. This is a foreign
   * key in the Ingredient Entity and is used to join the Ingredient and Meal Id. It has a
   * Many-to-One relationship with User.
   */
  @ManyToOne(fetch = FetchType.LAZY, cascade = {CascadeType.DETACH, CascadeType.MERGE,
      CascadeType.REFRESH})
  @JoinColumn(nullable = false, name = "meal_id")
  private Meal meal;

  public void setName(String name) {
    this.name = name;
  }

  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }

  public Long getId() {
    return id;
  }


  @NonNull
  public String getName() {
    return name;
  }

  public String getQuantity() {
    return quantity;
  }

  public Meal getMeal() {
    return meal;
  }

  public void setMeal(Meal meal) {
    this.meal = meal;
  }

  @PostConstruct
  private void initHateoas() {
    //noinspection ResultOfMethodCallIgnored
    entityLinks.toString();
  }

  /**
   * This Method with the @AutoWired annotation removes the properties element in the XML. Takes an
   * entityLinks parameter.
   */
  @SuppressWarnings("SpringJavaInjectionPointsAutowiringInspection")
  @Autowired
  private void setEntityLinks(EntityLinks entityLinks) {
    Ingredient.entityLinks = entityLinks;
  }

  /**
   * ???
   */
  @Override
  public URI getHref() {
    return (id != null)
        ? entityLinks.linkForItemResource(Meal.class, meal.getId()).slash("ingredients").slash(id)
            .toUri()
        : null;
  }

}
